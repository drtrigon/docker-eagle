# $DOCKER_USER, $DOCKER_PASS (hide) and $TRAVIS_TOKEN (hide) in Settings > Environment Variables
# Triggering builds (get TOKEN): https://docs.travis-ci.com/user/triggering-builds/

# TODO: testing without "|| true" to get error feadback, add other eagle versions

language: bash

sudo: false

env:
  - DOCKERFILE=Dockerfile.ubuntu DOCKERTAG=ubuntu-14.04
  #- DOCKERFILE=Dockerfile.ubuntu-16.04 DOCKERTAG=ubuntu-16.04
  #- DOCKERFILE=Dockerfile.centos DOCKERTAG=centos-7
  #- DOCKERFILE=Dockerfile.debian DOCKERTAG=debian-jessie
  #- DOCKERFILE=Dockerfile.debian-jessie-toollabs DOCKERTAG=debian-jessie-toollabs

services:
  - docker

install:
  - COMMIT=${TRAVIS_COMMIT::8} ;
  - REPO=drtrigon/docker-eagle ;
  - LATEST=ubuntu-14.04 ;
  - GERBER_CAM_FILE=gerb274x.cam ;
  - EXCELLON_CAM_FILE=excellon.cam ;
  - ULP_BOM_FILE=bom.ulp ;
  - BOARD_FILE=test-eagle-edrc ;
#  - docker login -u $DOCKER_USER -p $DOCKER_PASS ;
#  - docker build -f $DOCKERFILE -t $REPO:$COMMIT . ;
#  - docker tag $REPO:$COMMIT $REPO:$DOCKERTAG ;
#  # - docker tag $REPO:$COMMIT $REPO:travis-$TRAVIS_BUILD_NUMBER ;
#  - if [[ "$DOCKERTAG" == "$LATEST" ]] ; then
#      docker tag $REPO:$COMMIT $REPO:latest ;
#    fi
  - COMMIT=$DOCKERTAG ;          # debug: pull instead of build for faster developpment
  - docker pull $REPO:$COMMIT ;  # debug: pull instead of build for faster developpment

script:
  - docker images ;
  - docker run -t -d -e BOARD_FILE=$BOARD_FILE --name testing $REPO:$COMMIT  bin/bash ;
  - docker ps -l ;
  #- docker exec -t testing  xvfb-run -a /opt/eagle-7.7.0/bin/eagle -? || true ;     # DOES need a display
  #- docker exec -t testing  xvfb-run -a /opt/eagle-7.7.0/bin/eagle -d? || true ;    # DOES need a display
  - docker exec -t testing  /bin/bash -c 'xvfb-run -a $EAGLE -?' || true ;
  - docker exec -t testing  /bin/bash -c 'xvfb-run -a $EAGLE -d?' || true ;
  ### this is where testing ends and usage examples start ###
#  - docker exec -t testing  /bin/bash -c 'export GERBER_CAM_FILE=gerb274x.cam' ;
#  - docker exec -t testing  /bin/bash -c 'export EXCELLON_CAM_FILE=excellon.cam' ;
#  - docker exec -t testing  /bin/bash -c 'export ULP_BOM_FILE=bom.ulp' ;
#  - docker exec -t testing  /bin/bash -c 'export BOARD_FILE=test-eagle-edrc' ;
  - docker exec -t testing  /bin/bash -c 'echo - $BOARD_FILE -' ;
  - docker exec -e "GERBER_CAM_FILE" -e "EXCELLON_CAM_FILE" -e "ULP_BOM_FILE" -e BOARD_FILE=$BOARD_FILE -t testing  /bin/bash -c 'echo - $BOARD_FILE -' ;
  - docker exec -e "GERBER_CAM_FILE" -e "EXCELLON_CAM_FILE" -e "ULP_BOM_FILE" -e "BOARD_FILE=$BOARD_FILE" -t testing  /bin/bash -c 'env' ;
  - docker exec -e "GERBER_CAM_FILE" -e "EXCELLON_CAM_FILE" -e "ULP_BOM_FILE" -e "BOARD_FILE" -t testing  env ;
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  apt-get install -y git xdotool x11-utils psmisc ;
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  git clone https://github.com/drtrigon/test-eagle-edrc.git ;
  # choose free license "EAGLE Express" (with or w/o "Warning" dialog)
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  /bin/bash -c '/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16; sleep 3; export DISPLAY=:1.0; $EAGLE & sleep 3; xdotool getwindowfocus getwindowname; xdotool key Right; xdotool key Return; sleep 2; xdotool getwindowfocus getwindowname; xdotool key y; sleep 2; xdotool getwindowfocus getwindowname; xdotool key Escape; sleep 2; xdotool getwindowfocus getwindowname; xdotool mousemove 1 1 click 1; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key x; sleep 5; xwininfo -tree -root; killall eagle || true' ;
  # generate gerbers ${BOARD_FILE}.brd in $PWD directory (with "Check for Update" dialog)
#  - docker exec -t testing  /bin/bash -c '/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16; sleep 3; export DISPLAY=:1.0; $EAGLE & sleep 3; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key o; sleep 2; xdotool getwindowfocus getwindowname; xdotool type ${BOARD_FILE}.brd; xdotool key Return; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key w; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key m; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key o; xdotool key j; sleep 2; xdotool getwindowfocus getwindowname; xdotool type $GERBER_CAM_FILE; xdotool key Return; sleep 10; xdotool getwindowfocus getwindowname; xdotool mousemove 1 1 click 1; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key j; xdotool keyup alt; sleep 30; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key x; sleep 5; xwininfo -tree -root; killall eagle || true' ;
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  /bin/bash -c '/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16; sleep 3; export DISPLAY=:1.0; $EAGLE & sleep 3; xdotool getwindowfocus getwindowname; xdotool key Escape; sleep 2; xdotool getwindowfocus getwindowname; xdotool mousemove 1 1 click 1; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key o; sleep 2; xdotool getwindowfocus getwindowname; xdotool type ${BOARD_FILE}.brd; xdotool key Return; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key w; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key m; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key o; xdotool key j; sleep 2; xdotool getwindowfocus getwindowname; xdotool type $GERBER_CAM_FILE; xdotool key Return; sleep 10; xdotool getwindowfocus getwindowname; xdotool mousemove 1 1 click 1; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key j; xdotool keyup alt; sleep 30; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key x; sleep 5; xwininfo -tree -root; killall eagle || true' ;
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  /bin/bash -c 'cat ${BOARD_FILE}.gpi' ;  # gerb274x.cam
  # drill excellion creation (with "Check for Update" dialog)
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  /bin/bash -c '/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16; sleep 3; export DISPLAY=:1.0; $EAGLE & sleep 3; xdotool getwindowfocus getwindowname; xdotool key Escape; sleep 2; xdotool getwindowfocus getwindowname; xdotool mousemove 1 1 click 1; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key o; sleep 2; xdotool getwindowfocus getwindowname; xdotool type ${BOARD_FILE}.brd; xdotool key Return; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key w; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key m; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key o; xdotool key j; sleep 2; xdotool getwindowfocus getwindowname; xdotool type $EXCELLON_CAM_FILE; xdotool key Return; sleep 10; xdotool getwindowfocus getwindowname; xdotool mousemove 1 1 click 1; sleep 2; xdotool getwindowfocus getwindowname; xdotool keydown alt key j; xdotool keyup alt; sleep 30; xdotool getwindowfocus getwindowname; xdotool keydown alt key f; xdotool keyup alt; xdotool key x; sleep 5; xwininfo -tree -root; killall eagle || true' ;
  - docker exec -t -e GERBER_CAM_FILE -e EXCELLON_CAM_FILE -e ULP_BOM_FILE -e BOARD_FILE testing  /bin/bash -c 'cat ${BOARD_FILE}.dri' ;  # excellon.cam
  # bom part list creation
  # (see https://github.com/drtrigon/test-eagle-edrc/blob/master/.travis.yml#L100 ...)
  - docker stop testing ;
  - docker rm testing ;
  - docker rmi $REPO:$COMMIT
  #- docker images ;
  #- docker container ls ;
  - docker ps -l ;

#after_success:
#  # Upload to docker if it's on the master branch
#  - if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]] ; then
#      docker push $REPO ;
#    fi

#  # trigger docker-sketchbook (same tests based on docker-arduino)
#  - |-
#    if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]] ; then
#      if [[ "$DOCKERTAG" == "$LATEST" ]] ; then
#        curl -s -X POST -H "Content-Type: application/json" -H "Accept: application/json" -H "Travis-API-Version: 3" -H "Authorization: token $TRAVIS_TOKEN" -d "{\"request\": {\"branch\":\"master\"}}" https://api.travis-ci.org/repo/drtrigon%2Fdocker-file-metadata-wikibot/requests ;
#        curl -s -X POST -H "Content-Type: application/json" -H "Accept: application/json" -H "Travis-API-Version: 3" -H "Authorization: token $TRAVIS_TOKEN" -d "{\"request\": {\"branch\":\"master\"}}" https://api.travis-ci.org/repo/drtrigon%2Finstall-file-metadata-wikibot/requests ;
#      fi ;
#    fi

notifications:
  email: false
